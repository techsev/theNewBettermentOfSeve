{"version":3,"sources":["app.js","filters.js","plugins.js"],"names":["myLocalized","views","directives","$_global","initialLoad","loadRouteExtension","page","this","angular","module","$interpolateProvider","startSymbol","endSymbol","config","$routeProvider","$locationProvider","html5Mode","when","templateUrl","controller","resolve","postData","$q","$route","$http","deferred","defer","get","success","result","status","headers","data","currentPage","current","params","numPages","posts","promise","$scope","$location","$log","smoothScroll","element","document","getElementById","options","duration","easing","offset","isViewLoading","$on","ga","path","showFullPost","postId","expandedPost","$modal","projects","error","console","log","projectId","open","project","acf","modalInstance","animation","size","then","selectedItem","selected","$modalInstance","$sce","ID","projectColor","project_color","currentProject","projectContent","trustAsHtml","content","slug","ok","close","directive","restrict","replace","link","scope","attrs","template","jQuery","ready","$","find","lettering","children","fitText","filter","text","String","length","temp_string","substr","method","noop","methods","window","fn","kompressor","compressor","settings","extend","minFontSize","Number","NEGATIVE_INFINITY","maxFontSize","POSITIVE_INFINITY","each","$this","resizer","css","Math","max","min","width","parseFloat","on","injector","t","splitter","klass","after","a","split","inject","i","item","attr","empty","append","init","words","lines","r","replaceWith","end","apply","slice","call","arguments"],"mappings":"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","file":"app.min.js","sourcesContent":["//Globals\r\nmyLocalized = {\r\n    views: \"http://thebettermentofseve.com/wp-content/themes/thenewbetterment/views/\",\r\n    directives: \"http://thebettermentofseve.com/wp-content/themes/thenewbetterment/directives/\"\r\n};\r\n\r\nvar $_global = {\r\n    initialLoad: true,\r\n    loadRouteExtension: function(page) {\r\n        'use strict';\r\n        if (this.initialLoad) {\r\n\r\n            return 'views/' + page + \".onload\";\r\n        } else {\r\n\r\n            return myLocalized.views + page + \".html\";\r\n        }\r\n    }\r\n};\r\n\r\nangular.module('theNewBetterment', ['ngRoute', 'ui.bootstrap', 'wordpressFilters', 'smoothScroll'], ['$interpolateProvider', function($interpolateProvider) {\r\n        $interpolateProvider.startSymbol('[[');\r\n        $interpolateProvider.endSymbol(']]');\r\n    }])\r\n    .config([\"$routeProvider\", \"$locationProvider\", function($routeProvider, $locationProvider) {\r\n        $locationProvider.html5Mode(true);\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: function() {\r\n                    return $_global.loadRouteExtension('front-page');\r\n                },\r\n                controller: 'Main',\r\n                resolve: {\r\n                    postData: ['$q', '$route', '$http', function($q, $route, $http) {\r\n                        var deferred = $q.defer();\r\n                        if (!$_global.initialLoad) {\r\n                            $http.get(\"/wp-json/posts?filter[posts_per_page]=2\")\r\n                                .success(function(result, status, headers, config) {\r\n                                    var data = {\r\n                                        currentPage: $route.current.params.page,\r\n                                        numPages: headers('X-WP-TotalPages'),\r\n                                        posts: result\r\n                                    };\r\n                                    deferred.resolve(data);\r\n                                });\r\n\r\n                        } else {\r\n                            deferred.resolve(\"Initial Page load, using server render\");\r\n                        }\r\n                        return deferred.promise;\r\n                    }]\r\n                }\r\n            })\r\n            .when('/page/:page', {\r\n                templateUrl: function() {\r\n                    return $_global.loadRouteExtension('front-page');\r\n\r\n                },\r\n                controller: 'Main',\r\n                resolve: {\r\n                    postData: ['$q', '$route', '$http', function($q, $route, $http) {\r\n                        var deferred = $q.defer();\r\n                        if (!$_global.initialLoad) {\r\n                            $http.get('/wp-json/posts?filter[posts_per_page]=1&page=' + $route.current.params.page)\r\n                                .success(function(result, status, headers, config) {\r\n                                    var data = {\r\n                                        currentPage: $route.current.params.page,\r\n                                        numPages: headers('X-WP-TotalPages'),\r\n                                        posts: result\r\n                                    };\r\n\r\n                                    deferred.resolve(data);\r\n                                });\r\n\r\n                        } else {\r\n                            deferred.resolve(\"Initial Page load, using server render\");\r\n                        }\r\n                        return deferred.promise;\r\n                    }]\r\n                }\r\n            });\r\n\r\n\r\n\r\n    }])\r\n    .controller('Main', [\"$scope\", \"$location\", \"$log\", 'postData', 'smoothScroll', function($scope, $location, $log, postData, smoothScroll) {\r\n        var element = document.getElementById('frontpage-post-top');\r\n        var options = {\r\n            duration: 200,\r\n            easing: 'easeInQuad',\r\n            offset: 50\r\n        };\r\n\r\n        $_global.initialLoad = false;\r\n        $scope.posts = postData.posts;\r\n        $scope.currentPage = postData.currentPage;\r\n        $scope.numPages = postData.numPages;\r\n\r\n        $scope.isViewLoading = false;\r\n        $scope.$on('$routeChangeStart', function() {\r\n            $scope.isViewLoading = true;\r\n            smoothScroll(element, options);\r\n        });\r\n        $scope.$on('$routeChangeSuccess', function() {\r\n            $scope.isViewLoading = false;\r\n            ga('send', 'pageview', {\r\n                'page': $location.path()\r\n            });\r\n        });\r\n        $scope.$on('$routeChangeError', function() {\r\n            $scope.isViewLoading = false;\r\n        });\r\n\r\n        $scope.showFullPost = function(postId) {\r\n            if ($scope.expandedPost != postId) {\r\n                $scope.expandedPost = postId;\r\n            } else {\r\n                $scope.expandedPost = null;\r\n            }\r\n        };\r\n\r\n    }])\r\n    .controller('Projects', ['$scope', '$modal', '$log', '$http', function($scope, $modal, $log, $http) {\r\n        $http.get('/wp-json/posts?type[]=project')\r\n            .success(function(result) {\r\n                $scope.projects = result;\r\n            })\r\n            .error(function(data, status) {\r\n                console.log(data);\r\n            });\r\n        $scope.projectId = null;\r\n\r\n        $scope.open = function(project) {\r\n            if (project.acf.status == 'live') {\r\n                var modalInstance = $modal.open({\r\n                    animation: true,\r\n                    templateUrl: 'projectModal.html',\r\n                    controller: 'projectModal',\r\n                    size: 'lg',\r\n                    resolve: {\r\n                        project: function() {\r\n                            return project;\r\n                        },\r\n\r\n                    }\r\n                });\r\n\r\n                modalInstance.result.then(function(selectedItem) {\r\n                    $scope.selected = selectedItem;\r\n                }, function() {\r\n\r\n                });\r\n\r\n\r\n\r\n            }\r\n        };\r\n    }])\r\n    .controller('projectModal', ['$scope', '$modalInstance', '$log', '$sce', 'project', function($scope, $modalInstance, $log, $sce, project) {\r\n        $scope.projectId = project.ID;\r\n        $scope.projectColor = project.acf.project_color;\r\n        $scope.currentProject = project;\r\n        $scope.projectContent = $sce.trustAsHtml(project.content);\r\n\r\n        ga('send', 'pageview', {\r\n            'page': '/virtual/modal/' + project.slug\r\n        });\r\n\r\n        $scope.ok = function() {\r\n            $modalInstance.close();\r\n        };\r\n\r\n\r\n\r\n    }])\r\n    .directive('frontPageProjects', [function(element) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            templateUrl: myLocalized.directives + 'frontpage-projects.html',\r\n            link: function(scope, element, attrs) {\r\n\r\n            }\r\n\r\n        };\r\n    }])\r\n    .directive('siteTitle', [function(element) {\r\n        return {\r\n            restrict: \"E\",\r\n            replace: true,\r\n            template: '<div class=\"title-wrapper\"><h1 class=\"site-name\">The NEW Betterment of Seve</h1> <h2 class=\"tag-line\">The continued chronicles of my self-improvement.</h2></div>',\r\n            link: function(scope, element, attrs) {\r\n                jQuery(document).ready(function($) {\r\n                    $(element).find(\"h1.site-name\").lettering('words').children('span').lettering();\r\n                    $(element).find(\"h1.site-name\").fitText(1.05, {\r\n                        //minFontSize: '30px'\r\n                    });\r\n                    $(element).find(\"h2.tag-line\").fitText(4.5, {\r\n                        //minFontSize: '12px'\r\n                    });\r\n                });\r\n\r\n            }\r\n\r\n        };\r\n    }]);\r\n","angular.module('wordpressFilters', []).filter('to_raw', ['$sce', function($sce) {\r\n    return function(text) {\r\n        return $sce.trustAsHtml(text);\r\n    };\r\n}]).filter('to_text', ['$sce', function($sce) {\r\n    return function(text) {\r\n        return $sce.trustAsHtml(String(text).replace(/<[^>]+>/gm, ''));\r\n    };\r\n}]).filter('to_text_excerpt', ['$sce', function($sce) {\r\n    return function(text, length) {\r\n        var temp_string = String(text).replace(/<[^>]+>/gm, '').substr(0, length);\r\n        if (temp_string.length == length) {\r\n            temp_string += \"&hellip;\";\r\n        }\r\n        return $sce.trustAsHtml(temp_string);\r\n    };\r\n}]);\r\n","// Avoid `console` errors in browsers that lack a console.\r\n(function() {\r\n    var method;\r\n    var noop = function() {};\r\n    var methods = [\r\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\r\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\r\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\r\n        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\r\n    ];\r\n    var length = methods.length;\r\n    var console = (window.console = window.console || {});\r\n\r\n    while (length--) {\r\n        method = methods[length];\r\n\r\n        // Only stub undefined methods.\r\n        if (!console[method]) {\r\n            console[method] = noop;\r\n        }\r\n    }\r\n}());\r\n\r\n// Place any jQuery/helper plugins in here.\r\n\r\n\r\n/*global jQuery */\r\n/*!\r\n * FitText.js 1.2\r\n *\r\n * Copyright 2011, Dave Rupert http://daverupert.com\r\n * Released under the WTFPL license\r\n * http://sam.zoy.org/wtfpl/\r\n *\r\n * Date: Thu May 05 14:23:00 2011 -0600\r\n */\r\n\r\n(function($) {\r\n\r\n    $.fn.fitText = function(kompressor, options) {\r\n\r\n        // Setup options\r\n        var compressor = kompressor || 1,\r\n            settings = $.extend({\r\n                'minFontSize': Number.NEGATIVE_INFINITY,\r\n                'maxFontSize': Number.POSITIVE_INFINITY\r\n            }, options);\r\n\r\n        return this.each(function() {\r\n\r\n            // Store the object\r\n            var $this = $(this);\r\n\r\n            // Resizer() resizes items based on the object width divided by the compressor * 10\r\n            var resizer = function() {\r\n                $this.css('font-size', Math.max(Math.min($this.width() / (compressor * 10), parseFloat(settings.maxFontSize)), parseFloat(settings.minFontSize)));\r\n            };\r\n\r\n            // Call once to set.\r\n            resizer();\r\n\r\n            // Call on resize. Opera debounces their resize by default.\r\n            $(window).on('resize.fittext orientationchange.fittext', resizer);\r\n\r\n        });\r\n\r\n    };\r\n\r\n})(jQuery);\r\n\r\n\r\n/*global jQuery */\r\n/*!\r\n * Lettering.JS 0.7.0\r\n *\r\n * Copyright 2010, Dave Rupert http://daverupert.com\r\n * Released under the WTFPL license\r\n * http://sam.zoy.org/wtfpl/\r\n *\r\n * Thanks to Paul Irish - http://paulirish.com - for the feedback.\r\n *\r\n * Date: Mon Sep 20 17:14:00 2010 -0600\r\n */\r\n(function($) {\r\n    function injector(t, splitter, klass, after) {\r\n        var text = t.text(),\r\n            a = text.split(splitter),\r\n            inject = '';\r\n        if (a.length) {\r\n            $(a).each(function(i, item) {\r\n                inject += '<span class=\"' + klass + (i + 1) + '\" aria-hidden=\"true\">' + item + '</span>' + after;\r\n            });\r\n            t.attr('aria-label', text)\r\n                .empty()\r\n                .append(inject);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    var methods = {\r\n        init: function() {\r\n\r\n            return this.each(function() {\r\n                injector($(this), '', 'char', '');\r\n            });\r\n\r\n        },\r\n\r\n        words: function() {\r\n\r\n            return this.each(function() {\r\n                injector($(this), ' ', 'word', ' ');\r\n            });\r\n\r\n        },\r\n\r\n        lines: function() {\r\n\r\n            return this.each(function() {\r\n                var r = \"eefec303079ad17405c889e092e105b0\";\r\n                // Because it's hard to split a <br/> tag consistently across browsers,\r\n                // (*ahem* IE *ahem*), we replace all <br/> instances with an md5 hash\r\n                // (of the word \"split\").  If you're trying to use this plugin on that\r\n                // md5 hash string, it will fail because you're being ridiculous.\r\n                injector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    $.fn.lettering = function(method) {\r\n        // Method calling logic\r\n        if (method && methods[method]) {\r\n            return methods[method].apply(this, [].slice.call(arguments, 1));\r\n        } else if (method === 'letters' || !method) {\r\n            return methods.init.apply(this, [].slice.call(arguments, 0)); // always pass an array\r\n        }\r\n        $.error('Method ' + method + ' does not exist on jQuery.lettering');\r\n        return this;\r\n    };\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}